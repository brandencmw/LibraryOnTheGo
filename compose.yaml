version: "3.8"
services:
  database:
    container_name: database
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    user: postgres
    volumes:
      - data:/var/lib/postgresql/data
      - ./certificates/database/postgres.crt:/var/lib/postgresql/data/postgres.crt
      - ./certificates/database/postgres.key:/var/lib/postgresql/data/postgres.key
      - ./certificates/root/root-ca.crt:/var/lib/postgresql/data/root-ca.crt

  server:
    container_name: server
    build:
      context: ./server
      dockerfile: dockerfile
    env_file:
      - docker.env
      - postgres.docker.env
      - server.docker.env
    volumes:
      - ./certificates/backend/server:/app/certificates/server:ro
      # - ./certificates/backend/client:/app/certificates/client:ro
      - ./certificates/backend/client/backend-client.crt:/app/certificates/client/backend-client.crt:ro
      - ./certificates/backend/client/backend-client.key:/app/certificates/client/backend-client.key:ro
      - ./certificates/root/root-ca.crt:/app/certificates/root-ca.crt:ro
    depends_on:
      - database
    ports:
      - "8080:443"

  s3:
    container_name: s3_service
    build:
      context: ./s3_service
      dockerfile: dockerfile
    env_file:
      - docker.env
    volumes:
      - ./certificates/s3_service:/app/certificates
      - ./certificates/root/root-ca.crt:/app/certificates/root-ca.crt
    ports:
      - "8081:443"

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: dockerfile
    ports:
      - "8082:80"

  migrator:
    container_name: migrator
    build: 
      context: ./migrator
      dockerfile: dockerfile
    env_file:
      - postgres.docker.env
    volumes:
      - ./migrator/migrations:/app/migrations
      - ./certificates/migrator:/certificates
      - ./certificates/root/root-ca.crt:/certificates/root-ca.crt
    depends_on:
      - database

volumes:
  data: